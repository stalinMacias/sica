annotation.processing.enabled=true
annotation.processing.enabled.in.editor=false
annotation.processing.processors.list=
annotation.processing.run.all.processors=true
annotation.processing.source.output=${build.generated.sources.dir}/ap-source-output
application.title=sica-core
application.vendor=Hugo
auxiliary.org-netbeans-spi-editor-hints-projects.perProjectHintSettingsFile=nbproject/cfg_hints.xml
build.classes.dir=${build.dir}/classes
build.classes.excludes=**/*.java,**/*.form
# This directory is removed when the project is cleaned:
build.dir=build
build.generated.dir=${build.dir}/generated
build.generated.sources.dir=${build.dir}/generated-sources
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
copylibs.excludes=${javafx.classpath.extension}
# Uncomment to specify the preferred debugger connection transport:
#debug.transport=dt_socket
debug.classpath=\
    ${run.classpath}
debug.modulepath=\
    ${run.modulepath}
debug.test.classpath=\
    ${run.test.classpath}
debug.test.modulepath=\
    ${run.test.modulepath}
# Files in build.classes.dir which should be excluded from distribution jar
dist.archive.excludes=
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=${dist.dir}/sica-core.jar
dist.javadoc.dir=${dist.dir}/javadoc
endorsed.classpath=
excludes=
file.reference.commons-net-3.3.jar=lib\\commons-net-3.3.jar
file.reference.dpfpenrollment.jar=lib\\dpfpenrollment.jar
file.reference.dpfpverification.jar=lib\\dpfpverification.jar
file.reference.dpotapi.jar=lib\\dpotapi.jar
file.reference.dpotjni.jar=lib\\dpotjni.jar
file.reference.jna-4.1.0.jar=lib\\jna-4.1.0.jar
file.reference.jna-platform-4.1.0.jar=lib\\jna-platform-4.1.0.jar
file.reference.log4j-1.2.17.jar=lib\\log4j-1.2.17.jar
file.reference.objectdb.jar=lib\\objectdb.jar
file.reference.slf4j-api-1.7.5.jar=lib\\slf4j-api-1.7.5.jar
file.reference.slf4j-log4j12-1.7.6.jar=lib\\slf4j-log4j12-1.7.6.jar
includes=**
jar.compress=false
javac.classpath=\
    ${file.reference.commons-net-3.3.jar}:\
    ${file.reference.log4j-1.2.17.jar}:\
    ${file.reference.objectdb.jar}:\
    ${file.reference.slf4j-api-1.7.5.jar}:\
    ${file.reference.slf4j-log4j12-1.7.6.jar}:\
    ${file.reference.dpfpenrollment.jar}:\
    ${file.reference.dpfpverification.jar}:\
    ${file.reference.dpotapi.jar}:\
    ${file.reference.dpotjni.jar}:\
    ${file.reference.jna-4.1.0.jar}:\
    ${file.reference.jna-platform-4.1.0.jar}:\
    ${reference.sica-common.jar}:\
    ${javafx.classpath.extension}
# Space-separated list of extra javac options
javac.compilerargs=-Xlint:unchecked
javac.deprecation=false
javac.modulepath=
javac.processormodulepath=
javac.processorpath=\
    ${javac.classpath}
javac.source=1.8
javac.target=1.8
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
javac.test.modulepath=\
    ${javac.modulepath}
javac.test.processorpath=\
    ${javac.test.classpath}
javadoc.additionalparam=
javadoc.author=false
javadoc.encoding=${source.encoding}
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=false
javadoc.splitindex=true
javadoc.use=true
javadoc.version=false
javadoc.windowtitle=
javafx.classpath.extension=\
    ${java.home}/lib/javaws.jar:\
    ${java.home}/lib/deploy.jar:\
    ${java.home}/lib/plugin.jar
keep.javafx.runtime.on.classpath=true
main.class=sica.Sica
meta.inf.dir=${src.dir}/META-INF
mkdist.disabled=true
platform.active=default_platform
project.sica-common=../sica-common
reference.sica-common.jar=${project.sica-common}/dist/sica-common.jar
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
# Space-separated list of JVM arguments used when running the project.
# You may also define separate properties like run-sys-prop.name=value instead of -Dname=value.
# To set system properties for unit tests define test-sys-prop.name=value:
run.jvmargs=
run.modulepath=\
    ${javac.modulepath}
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
run.test.modulepath=\
    ${javac.test.modulepath}
source.encoding=UTF-8
src.dir=src
test.src.dir=test
